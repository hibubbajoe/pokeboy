{"version":3,"sources":["components/DirectionInput.js","utils/utils.js","components/SceneTransition.js","components/KeyPressListener.js","components/TextMessage.js","components/OverworldEvent.js","components/Sprite.js","components/GameObject.js","components/Person.js","components/OverworldMap.js","components/Overworld.js","components/BuildWorld.js","components/GameContainer.js","App.js","index.js"],"names":["DirectionInput","this","heldDirections","map","document","addEventListener","e","dir","code","indexOf","unshift","index","splice","withGrid","n","asGridCoord","x","y","nextPosition","initX","initY","direction","emitEvent","name","detail","event","CustomEvent","dispatchEvent","SceneTransition","element","createElement","classList","add","remove","once","container","callback","appendChild","KeyPressListener","keyCode","keySafe","keydownFunction","keyupFunction","removeEventListener","TextMessage","text","onComplete","innerHTML","querySelector","done","actionListener","unbind","OverworldEvent","resolve","gameObjects","who","startBehavior","type","time","completeHandler","whoId","retry","faceHero","init","sceneTransition","overworld","startMap","window","OverworldMaps","fadeOut","Promise","Sprite","config","image","Image","src","onload","isLoaded","shadow","useShadow","isShadowLoaded","animations","currentAnimation","currentAnimationFrame","animationFrameLimit","animationFrameProgress","gameObject","key","undefined","frame","ctx","cameraPerson","drawImage","frameX","frameY","updateAnimationProgress","GameObject","id","isMounted","sprite","behaviorLoop","behaviorLoopIndex","talking","addWall","setTimeout","doBehaviorEvent","a","isCutscenePlaying","length","isStanding","eventConfig","eventHandler","Person","movingProgressRemaining","isPlayerControlled","directionUpdate","state","updatePosition","arrow","updateSprite","behavior","isSpaceTaken","moveWall","property","change","setAnimation","OverworldMap","mountObjects","Object","keys","forEach","object","mount","cutsceneSpaces","walls","lowerImage","lowerSrc","upperImage","upperSrc","currX","currY","events","i","values","hero","nextCoords","match","find","startCutscene","console","log","wasX","wasY","removeWall","Town","npc1","npc2","npc3","npc4","House1","Overworld","canvas","getContext","step","clearRect","width","height","update","directionInput","drawLowerImage","sort","b","draw","drawUpperImage","requestAnimationFrame","checkForActionCutscene","checkForFootstepCutscene","mapConfig","bindActionInput","bindHeroPositionCheck","startGameLoop","buildOverWorld","OverWorld","useEffect","class","App","GameContainer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7dc2d809.chunk.js","sourcesContent":["export default class DirectionInput {\n    constructor() {\n        this.heldDirections = [];\n\n        this.map = {\n            \"ArrowUp\": \"up\",\n            \"KeyW\": \"up\",\n            \"ArrowDown\": \"down\",\n            \"KeyS\": \"down\",\n            \"ArrowLeft\": \"left\",\n            \"KeyA\": \"left\",\n            \"ArrowRight\": \"right\",\n            \"KeyD\": \"right\",\n        }\n    }\n\n    get direction() {\n        return this.heldDirections[0];\n    }\n\n    init() {\n        document.addEventListener(\"keydown\", e => {\n            const dir = this.map[e.code];\n            if (dir && this.heldDirections.indexOf(dir) === -1) {\n                this.heldDirections.unshift(dir);\n            }\n        });\n        document.addEventListener(\"keyup\", e => {\n            const dir = this.map[e.code];\n            const index = this.heldDirections.indexOf(dir);\n            if (index > -1) {\n                this.heldDirections.splice(index, 1);\n            }\n        })\n\n    }\n}","export const withGrid = (n) => {\n    return n * 16;\n}\n\nexport const asGridCoord = (x, y) => {\n    return `${x * 16},${y * 16}`\n}\n\nexport const nextPosition = (initX, initY, direction) => {\n    let x = initX;\n    let y = initY;\n    const size = 16;\n    if (direction === \"left\") {\n        x -= size;\n    } else if (direction === \"right\") {\n        x += size;\n    } else if (direction === \"up\") {\n        y -= size;\n    } else if (direction === \"down\") {\n        y += size;\n    }\n    return { x, y };\n}\n\nexport const oppositeDirection = (direction) => {\n    if (direction === \"left\") { return \"right\" }\n    if (direction === \"right\") { return \"left\" }\n    if (direction === \"up\") { return \"down\" }\n    return \"up\"\n}\n\nexport const emitEvent = (name, detail) => {\n    const event = new CustomEvent(name, {\n        detail\n    });\n    document.dispatchEvent(event);\n}","export default class SceneTransition {\n    constructor() {\n        this.element = null;\n    }\n    createElement() {\n        this.element = document.createElement(\"div\");\n        this.element.classList.add(\"SceneTransition\");\n    }\n\n    fadeOut() {\n        this.element.classList.add(\"fade-out\");\n        this.element.addEventListener(\"animationend\", () => {\n            this.element.remove();\n        }, { once: true })\n    }\n\n    init(container, callback) {\n        this.createElement();\n        container.appendChild(this.element);\n\n        this.element.addEventListener(\"animationend\", () => {\n            callback();\n        }, { once: true })\n\n    }\n}","export default class KeyPressListener {\n    constructor(keyCode, callback) {\n        let keySafe = true;\n        this.keydownFunction = function (event) {\n            if (event.code === keyCode) {\n                if (keySafe) {\n                    keySafe = false;\n                    callback();\n                }\n            }\n        };\n        this.keyupFunction = function (event) {\n            if (event.code === keyCode) {\n                keySafe = true;\n            }\n        };\n        document.addEventListener('keydown', this.keydownFunction);\n        document.addEventListener('keyup', this.keyupFunction);\n    }\n\n    unbind() {\n        document.removeEventListener('keydown', this.keydownFunction);\n        document.removeEventListener('keyup', this.keyupFunction);\n    }\n}","import KeyPressListener from './KeyPressListener'\n\nexport default class TextMessage {\n    constructor({ text, onComplete }) {\n        this.text = text;\n        this.onComplete = onComplete;\n        this.element = null;\n    }\n\n    createElement() {\n        //Create the element\n        this.element = document.createElement(\"div\");\n        this.element.classList.add(\"TextMessage\");\n\n        this.element.innerHTML = (`\n        <p class=\"TextMessage_p\">${this.text}</p>\n        <button class=\"TextMessage_button\"></button>\n        `)\n\n        this.element.querySelector(\"button\").addEventListener(\"click\", () => {\n            //Close the text message\n            this.done();\n        });\n\n        this.actionListener = new KeyPressListener(\"Enter\", () => {\n            this.actionListener.unbind();\n            this.done();\n        })\n\n    }\n\n    done() {\n        this.element.remove();\n        this.onComplete();\n    }\n\n    init(container) {\n        this.createElement();\n        container.appendChild(this.element)\n    }\n\n}","import { oppositeDirection } from \"../utils/utils\";\nimport SceneTransition from \"./SceneTransition\";\nimport TextMessage from \"./TextMessage\";\n\nexport default class OverworldEvent {\n    constructor({ map, event }) {\n        this.map = map;\n        this.event = event;\n    }\n\n    stand(resolve) {\n        const who = this.map.gameObjects[this.event.who];\n        who.startBehavior({\n            map: this.map\n        }, {\n            type: 'stand',\n            direction: this.event.direction,\n            time: this.event.time\n        })\n\n        const completeHandler = e => {\n            if (e.detail.whoId === this.event.who) {\n                document.removeEventListener('PersonStandComplete', completeHandler);\n                resolve();\n            }\n        }\n        document.addEventListener('PersonStandComplete', completeHandler)\n    }\n\n    walk(resolve) {\n        const who = this.map.gameObjects[this.event.who];\n        who.startBehavior({\n            map: this.map\n        }, {\n            type: 'walk',\n            direction: this.event.direction,\n            retry: true\n        })\n\n        const completeHandler = e => {\n            if (e.detail.whoId === this.event.who) {\n                document.removeEventListener('PersonWalkingComplete', completeHandler);\n                resolve();\n            }\n        }\n        document.addEventListener('PersonWalkingComplete', completeHandler)\n    }\n\n\n    textMessage(resolve) {\n\n        if (this.event.faceHero) {\n            const obj = this.map.gameObjects[this.event.faceHero];\n            obj.direction = oppositeDirection(this.map.gameObjects[\"hero\"].direction);\n        }\n\n        const message = new TextMessage({\n            text: this.event.text,\n            onComplete: () => resolve()\n        })\n        message.init(document.querySelector(\".game-container\"))\n    }\n\n    changeMap(resolve) {\n        const sceneTransition = new SceneTransition();\n        sceneTransition.init(document.querySelector('.game-container'), () => {\n            this.map.overworld.startMap(window.OverworldMaps[this.event.map]);\n            resolve();\n            sceneTransition.fadeOut();\n        })\n    }\n\n    init() {\n        return new Promise(resolve => {\n            this[this.event.type](resolve)\n        })\n    }\n}","import { withGrid } from \"../utils/utils\";\n\nexport default class Sprite {\n    constructor(config) {\n\n        //Set up the image\n        this.image = new Image();\n        this.image.src = config.src;\n        this.image.onload = () => {\n            this.isLoaded = true;\n        }\n\n        //Shadow\n        this.shadow = new Image();\n        this.useShadow = true; //config.useShadow || false\n        if (this.useShadow) {\n            this.shadow.src = \"/images/characters/shadow.png\";\n        }\n        this.shadow.onload = () => {\n            this.isShadowLoaded = true;\n        }\n\n        //Configure Animations and inital states\n        this.animations = config.animations || {\n            \"idle-down\": [[0, 0]],\n            \"idle-right\": [[0, 1]],\n            \"idle-up\": [[0, 2]],\n            \"idle-left\": [[0, 3]],\n            \"walk-down\": [[1, 0], [0, 0], [3, 0], [0, 0],],\n            \"walk-right\": [[1, 1], [0, 1], [3, 1], [0, 1],],\n            \"walk-up\": [[1, 2], [0, 2], [3, 2], [0, 2],],\n            \"walk-left\": [[1, 3], [0, 3], [3, 3], [0, 3],]\n        }\n\n        // Set starting frame to chosen value\n        this.currentAnimation = config.currentAnimation || 'idle-down';\n        this.currentAnimationFrame = 0;\n\n        // Set sprite animation to happen on every chosen frame limit\n        this.animationFrameLimit = config.animationFrameLimit || 8;\n        this.animationFrameProgress = this.animationFrameLimit;\n\n        //Reference the game object\n        this.gameObject = config.gameObject;\n    }\n\n    // Picks out sprite coordinates by getting the first/only index with chosen key\n    get frame() {\n        return this.animations[this.currentAnimation][this.currentAnimationFrame]\n    }\n\n    // Försök förstå den här\n    setAnimation(key) {\n        if (this.currentAnimation !== key) {\n            this.currentAnimation = key;\n            this.currentAnimationFrame = 0;\n            this.animationFrameProgress = this.animationFrameLimit;\n        }\n    }\n\n    // Försök förstå den här\n    updateAnimationProgress() {\n\n        // If frame progress is greater than 0 we tick down \n        if (this.animationFrameProgress > 0) {\n            this.animationFrameProgress -= 1;\n            return;\n        }\n\n        // Reseting the counter when frame progress reaches 0 \n        this.animationFrameProgress = this.animationFrameLimit;\n        this.currentAnimationFrame += 1;\n\n        // If no more sprite coordinates we reset the animation\n        if (this.frame === undefined) {\n            this.currentAnimationFrame = 0;\n        }\n    }\n\n    draw(ctx, cameraPerson) {\n        const x = this.gameObject.x - 8 + withGrid(10.5) - cameraPerson.x;\n        const y = this.gameObject.y - 18 + withGrid(6) - cameraPerson.y;\n\n        // Draws shadow under our sprites\n        this.isShadowLoaded && ctx.drawImage(this.shadow, x, y);\n\n        // Destructuring coordinates from frame getter\n        const [frameX, frameY] = this.frame;\n\n        // Draws our hero and npc sprites\n        this.isLoaded && ctx.drawImage(this.image,\n            frameX * 32, frameY * 32,   // Picks out sprite from sprite sheet\n            32, 32, // Size of 1 sprite object\n            x, y,   // Placement on grid\n            32, 32  // Size of chosen sprite object\n        )\n\n        this.updateAnimationProgress();\n    }\n}","import OverworldEvent from \"./OverworldEvent\";\nimport Sprite from \"./Sprite\";\n\nexport default class GameObject {\n    constructor(config) {\n        this.id = null;\n        this.isMounted = false;\n        this.x = config.x || 0;\n        this.y = config.y || 0;\n        this.direction = config.direction || 'down';\n        this.sprite = new Sprite({\n            gameObject: this,\n            src: config.src || \"/images/characters/people/ashboy.png\",\n        });\n\n        this.behaviorLoop = config.behaviorLoop || [];\n        this.behaviorLoopIndex = 0;\n        this.talking = config.talking || [];\n    }\n\n    mount(map) {\n        this.isMounted = true;\n        map.addWall(this.x, this.y);\n\n        // Continues behavior loop even if interupted\n        setTimeout(() => {\n            this.doBehaviorEvent(map);\n        }, 10)\n    }\n\n    update() {\n\n    }\n\n    async doBehaviorEvent(map) {\n\n        //Don't do anything if there is a more important cutscene or I don't have config to do anything\n        //anyway.\n        if (map.isCutscenePlaying || this.behaviorLoop.length === 0 || this.isStanding) {\n            return;\n        }\n\n        //Setting up our event with relevant info\n        let eventConfig = this.behaviorLoop[this.behaviorLoopIndex];\n        eventConfig.who = this.id;\n\n        //Create an event instance out of our next event config\n        const eventHandler = new OverworldEvent({ map, event: eventConfig });\n        await eventHandler.init();\n\n        //Setting the next event to fire\n        this.behaviorLoopIndex += 1;\n        if (this.behaviorLoopIndex === this.behaviorLoop.length) {\n            this.behaviorLoopIndex = 0;\n        }\n\n        //Do it again!\n        this.doBehaviorEvent(map);\n    }\n}","import { emitEvent } from \"../utils/utils\";\nimport GameObject from \"./GameObject\";\n\nclass Person extends GameObject {\n    constructor(config) {\n        super(config);\n        this.movingProgressRemaining = 0;\n        this.isStanding = false;\n\n        this.isPlayerControlled = config.isPlayerControlled || false;\n\n        this.directionUpdate = {\n            \"up\": [\"y\", -1],\n            \"down\": [\"y\", 1],\n            \"left\": [\"x\", -1],\n            \"right\": [\"x\", 1],\n        }\n    }\n\n    update(state) {\n        if (this.movingProgressRemaining > 0) {\n            this.updatePosition();\n        } else {\n\n            // More cases will come here\n\n            // Case: keyobard ready and arrow pressed\n            if (!state.map.isCutscenePlaying && this.isPlayerControlled && state.arrow) {\n                this.startBehavior(state, {\n                    type: 'walk',\n                    direction: state.arrow\n                })\n            }\n            this.updateSprite(state);\n        }\n    }\n\n    startBehavior(state, behavior) {\n        //Set character direction to whatever behavior has\n        this.direction = behavior.direction;\n        if (behavior.type === \"walk\") {\n            //Stop here if space is not free\n            if (state.map.isSpaceTaken(this.x, this.y, this.direction)) {\n\n                behavior.retry && setTimeout(() => {\n                    this.startBehavior(state, behavior)\n                }, 10);\n\n                return;\n            }\n\n            //Ready to walk!\n            state.map.moveWall(this.x, this.y, this.direction);\n            this.movingProgressRemaining = 16;\n            this.updateSprite(state);\n        }\n\n        if (behavior.type === \"stand\") {\n            this.isStanding = true;\n            setTimeout(() => {\n                emitEvent(\"PersonStandComplete\", {\n                    whoId: this.id\n                })\n                this.isStanding = false;\n            }, behavior.time)\n        }\n\n    }\n\n    updatePosition() {\n        const [property, change] = this.directionUpdate[this.direction];\n        this[property] += change;\n        this.movingProgressRemaining -= 1;\n\n        if (this.movingProgressRemaining === 0) {\n            //We finished the walk!\n            emitEvent(\"PersonWalkingComplete\", {\n                whoId: this.id\n            })\n\n        }\n    }\n\n    updateSprite() {\n        if (this.movingProgressRemaining > 0) {\n            this.sprite.setAnimation('walk-' + this.direction);\n            return;\n        }\n\n        this.sprite.setAnimation('idle-' + this.direction);\n    }\n\n}\n\nexport default Person;","// import GameObject from \"./GameObject\";\nimport { nextPosition, withGrid, asGridCoord } from \"../utils/utils\";\nimport Person from \"./Person\";\nimport OverworldEvent from \"./OverworldEvent\";\n\nexport default class OverworldMap {\n  constructor(config) {\n    this.overworld = null;\n    this.gameObjects = config.gameObjects;\n    this.cutsceneSpaces = config.cutsceneSpaces || {};\n    this.walls = config.walls || {};\n\n    this.lowerImage = new Image();\n    this.lowerImage.src = config.lowerSrc;\n\n    this.upperImage = new Image();\n    this.upperImage.src = config.upperSrc || \"\";\n\n    this.isCutscenePlaying = false;\n  }\n\n  drawLowerImage(ctx, cameraPerson) {\n    ctx.drawImage(\n      this.lowerImage,\n      withGrid(10.5) - cameraPerson.x,\n      withGrid(6) - cameraPerson.y\n    );\n  }\n  drawUpperImage(ctx, cameraPerson) {\n    ctx.drawImage(\n      this.upperImage,\n      withGrid(10.5) - cameraPerson.x,\n      withGrid(6) - cameraPerson.y\n    );\n  }\n\n  isSpaceTaken(currX, currY, direction) {\n    const { x, y } = nextPosition(currX, currY, direction);\n    return this.walls[`${x},${y}`] || false;\n  }\n\n  mountObjects = () => {\n    Object.keys(this.gameObjects).forEach((key) => {\n      let object = this.gameObjects[key];\n      object.id = key;\n      object.mount(this);\n    });\n  };\n\n  async startCutscene(events) {\n    this.isCutscenePlaying = true;\n\n    for (let i = 0; i < events.length; i++) {\n      const eventHandler = new OverworldEvent({\n        event: events[i],\n        map: this,\n      });\n      await eventHandler.init();\n    }\n\n    this.isCutscenePlaying = false;\n\n    //Reset NPCs to do their idle behavior\n    Object.values(this.gameObjects).forEach((object) =>\n      object.doBehaviorEvent(this)\n    );\n  }\n\n  checkForActionCutscene() {\n    const hero = this.gameObjects[\"hero\"];\n    const nextCoords = nextPosition(hero.x, hero.y, hero.direction);\n    const match = Object.values(this.gameObjects).find((object) => {\n      return `${object.x},${object.y}` === `${nextCoords.x},${nextCoords.y}`;\n    });\n\n    if (!this.isCutscenePlaying && match && match.talking.length) {\n      this.startCutscene(match.talking[0].events);\n    }\n  }\n\n  checkForFootstepCutscene() {\n    const hero = this.gameObjects[\"hero\"];\n    const match = this.cutsceneSpaces[`${hero.x},${hero.y}`];\n    console.log(match);\n\n    if (!this.isCutscenePlaying && match) {\n      this.startCutscene(match[0].events);\n    }\n  }\n\n  addWall(x, y) {\n    this.walls[`${x},${y}`] = true;\n  }\n\n  removeWall(x, y) {\n    delete this.walls[`${x},${y}`];\n  }\n\n  moveWall(wasX, wasY, direction) {\n    this.removeWall(wasX, wasY);\n    const { x, y } = nextPosition(wasX, wasY, direction);\n    this.addWall(x, y);\n  }\n}\n\nwindow.OverworldMaps = {\n  Town: {\n    lowerSrc: \"/images/maps/PokemonLower.png\",\n    upperSrc: \"/images/maps/PokemonUpper.png\",\n    gameObjects: {\n      hero: new Person({\n        isPlayerControlled: true,\n        x: withGrid(6),\n        y: withGrid(8),\n      }),\n      // Försök få pikachu att hela tiden ligga ett steg bakom ash\n      npc1: new Person({\n        x: withGrid(11),\n        y: withGrid(7),\n        src: \"/images/characters/people/pikachu.png\",\n        behaviorLoop: [\n          { type: \"walk\", direction: \"up\" },\n          { type: \"walk\", direction: \"up\" },\n          { type: \"walk\", direction: \"up\" },\n          { type: \"walk\", direction: \"up\" },\n          { type: \"stand\", direction: \"up\", time: 1500 },\n          { type: \"walk\", direction: \"down\" },\n          { type: \"walk\", direction: \"down\" },\n          { type: \"walk\", direction: \"down\" },\n          { type: \"walk\", direction: \"down\" },\n          { type: \"stand\", direction: \"down\", time: 1700 },\n        ],\n      }),\n      npc2: new Person({\n        x: withGrid(15),\n        y: withGrid(8),\n        src: \"/images/characters/people/bulbasaur.png\",\n        behaviorLoop: [{ type: \"stand\", direction: \"down\", time: 800 }],\n        talking: [\n          {\n            events: [\n              {\n                type: \"textMessage\",\n                text: \"You can't come in here..\",\n                faceHero: \"npc2\",\n              },\n            ],\n          },\n        ],\n      }),\n      npc3: new Person({\n        x: withGrid(6),\n        y: withGrid(18),\n        src: \"/images/characters/people/kingsler.png\",\n        behaviorLoop: [\n          { type: \"stand\", direction: \"right\", time: 10000 },\n          { type: \"stand\", direction: \"up\", time: 800 },\n        ],\n        talking: [\n          {\n            events: [\n              {\n                type: \"textMessage\",\n                text: \"I kinda wanna go swim man!\",\n                faceHero: \"npc3\",\n              },\n            ],\n          },\n        ],\n      }),\n      npc4: new Person({\n        x: withGrid(14),\n        y: withGrid(2),\n        src: \"/images/characters/people/gengar.png\",\n        behaviorLoop: [\n          { type: \"stand\", direction: \"down\", time: 10000 },\n          { type: \"stand\", direction: \"up\", time: 800 },\n        ],\n        talking: [\n          {\n            events: [{ type: \"textMessage\", text: \"BOO!!\", faceHero: \"npc3\" }],\n          },\n        ],\n      }),\n    },\n    walls: {\n      // map western wall\n      [asGridCoord(1, 1)]: true,\n      [asGridCoord(1, 2)]: true,\n      [asGridCoord(1, 3)]: true,\n      [asGridCoord(1, 4)]: true,\n      [asGridCoord(1, 5)]: true,\n      [asGridCoord(1, 6)]: true,\n      [asGridCoord(1, 7)]: true,\n      [asGridCoord(1, 8)]: true,\n      [asGridCoord(1, 9)]: true,\n      [asGridCoord(1, 10)]: true,\n      [asGridCoord(1, 11)]: true,\n      [asGridCoord(1, 12)]: true,\n      [asGridCoord(1, 13)]: true,\n      [asGridCoord(1, 14)]: true,\n      [asGridCoord(1, 15)]: true,\n      [asGridCoord(1, 16)]: true,\n      [asGridCoord(1, 17)]: true,\n      [asGridCoord(1, 18)]: true,\n\n      // map eastern wall\n      [asGridCoord(22, 1)]: true,\n      [asGridCoord(22, 2)]: true,\n      [asGridCoord(22, 3)]: true,\n      [asGridCoord(22, 4)]: true,\n      [asGridCoord(22, 5)]: true,\n      [asGridCoord(22, 6)]: true,\n      [asGridCoord(22, 7)]: true,\n      [asGridCoord(22, 8)]: true,\n      [asGridCoord(22, 9)]: true,\n      [asGridCoord(22, 10)]: true,\n      [asGridCoord(22, 11)]: true,\n      [asGridCoord(22, 12)]: true,\n      [asGridCoord(22, 13)]: true,\n      [asGridCoord(22, 14)]: true,\n      [asGridCoord(22, 15)]: true,\n      [asGridCoord(22, 16)]: true,\n      [asGridCoord(22, 17)]: true,\n      [asGridCoord(22, 18)]: true,\n\n      // map northern wall\n      [asGridCoord(2, 1)]: true,\n      [asGridCoord(3, 1)]: true,\n      [asGridCoord(4, 1)]: true,\n      [asGridCoord(5, 1)]: true,\n      [asGridCoord(6, 1)]: true,\n      [asGridCoord(7, 1)]: true,\n      [asGridCoord(8, 1)]: true,\n      [asGridCoord(9, 1)]: true,\n      [asGridCoord(10, 1)]: true,\n      [asGridCoord(11, 1)]: true,\n      [asGridCoord(12, 0)]: true,\n      [asGridCoord(13, 0)]: true,\n      [asGridCoord(14, 1)]: true,\n      [asGridCoord(15, 1)]: true,\n      [asGridCoord(16, 1)]: true,\n      [asGridCoord(17, 1)]: true,\n      [asGridCoord(18, 1)]: true,\n      [asGridCoord(19, 1)]: true,\n      [asGridCoord(20, 1)]: true,\n      [asGridCoord(21, 1)]: true,\n\n      // map southern wall\n      [asGridCoord(2, 19)]: true,\n      [asGridCoord(3, 19)]: true,\n      [asGridCoord(4, 19)]: true,\n      [asGridCoord(5, 19)]: true,\n      // no trees\n      [asGridCoord(6, 20)]: true,\n      // water starts\n      [asGridCoord(7, 19)]: true,\n      [asGridCoord(7, 18)]: true,\n      [asGridCoord(7, 17)]: true,\n      [asGridCoord(8, 17)]: true,\n      [asGridCoord(9, 17)]: true,\n      [asGridCoord(10, 17)]: true,\n      [asGridCoord(10, 18)]: true,\n      [asGridCoord(10, 19)]: true,\n      // no trees continues\n      [asGridCoord(11, 20)]: true,\n      [asGridCoord(12, 20)]: true,\n      [asGridCoord(13, 20)]: true,\n      [asGridCoord(14, 20)]: true,\n      [asGridCoord(15, 20)]: true,\n      [asGridCoord(16, 20)]: true,\n      [asGridCoord(17, 20)]: true,\n      // trees come back\n      [asGridCoord(18, 19)]: true,\n      [asGridCoord(19, 19)]: true,\n      [asGridCoord(20, 19)]: true,\n      [asGridCoord(21, 19)]: true,\n\n      // fences\n      [asGridCoord(13, 16)]: true,\n      [asGridCoord(14, 16)]: true,\n      [asGridCoord(15, 16)]: true,\n      [asGridCoord(16, 16)]: true,\n      [asGridCoord(17, 16)]: true,\n      [asGridCoord(18, 16)]: true,\n      [asGridCoord(5, 11)]: true,\n      [asGridCoord(6, 11)]: true,\n      [asGridCoord(7, 11)]: true,\n      [asGridCoord(8, 11)]: true,\n      [asGridCoord(9, 11)]: true,\n      [asGridCoord(5, 14)]: true,\n\n      // left house\n      [asGridCoord(4, 7)]: true,\n      [asGridCoord(5, 7)]: true,\n      [asGridCoord(6, 6)]: true,\n      [asGridCoord(6, 7)]: true,\n      [asGridCoord(7, 7)]: true,\n      [asGridCoord(8, 7)]: true,\n      [asGridCoord(9, 7)]: true,\n      [asGridCoord(9, 6)]: true,\n      [asGridCoord(9, 5)]: true,\n      [asGridCoord(9, 4)]: true,\n      [asGridCoord(9, 4)]: true,\n      [asGridCoord(8, 4)]: true,\n      [asGridCoord(7, 4)]: true,\n      [asGridCoord(6, 4)]: true,\n      [asGridCoord(5, 4)]: true,\n      [asGridCoord(5, 5)]: true,\n      [asGridCoord(5, 6)]: true,\n\n      // right house\n      [asGridCoord(13, 7)]: true,\n      [asGridCoord(14, 7)]: true,\n      [asGridCoord(15, 6)]: true,\n      [asGridCoord(16, 7)]: true,\n      [asGridCoord(17, 7)]: true,\n      [asGridCoord(18, 7)]: true,\n      [asGridCoord(18, 6)]: true,\n      [asGridCoord(18, 5)]: true,\n      [asGridCoord(18, 4)]: true,\n      [asGridCoord(18, 4)]: true,\n      [asGridCoord(17, 4)]: true,\n      [asGridCoord(16, 4)]: true,\n      [asGridCoord(15, 4)]: true,\n      [asGridCoord(14, 4)]: true,\n      [asGridCoord(14, 5)]: true,\n      [asGridCoord(14, 6)]: true,\n\n      // big house\n      [asGridCoord(13, 10)]: true,\n      [asGridCoord(14, 10)]: true,\n      [asGridCoord(15, 10)]: true,\n      [asGridCoord(16, 10)]: true,\n      [asGridCoord(17, 10)]: true,\n      [asGridCoord(18, 10)]: true,\n      [asGridCoord(19, 10)]: true,\n      [asGridCoord(19, 11)]: true,\n      [asGridCoord(19, 12)]: true,\n      [asGridCoord(19, 13)]: true,\n      [asGridCoord(18, 13)]: true,\n      [asGridCoord(17, 13)]: true,\n      [asGridCoord(16, 13)]: true,\n      [asGridCoord(15, 13)]: true,\n      [asGridCoord(14, 13)]: true,\n      [asGridCoord(13, 13)]: true,\n      [asGridCoord(13, 12)]: true,\n      [asGridCoord(13, 11)]: true,\n    },\n    cutsceneSpaces: {\n      // [asGridCoord(6, 7)]: [\n      //     {\n      //         events: [\n      //             { type: \"changeMap\", map: \"House1\" }\n      //         ]\n      //     }\n      // ],\n      [asGridCoord(13, 1)]: [\n        {\n          events: [\n            { who: \"npc4\", type: \"walk\", direction: \"left\" },\n            { who: \"npc4\", type: \"stand\", direction: \"up\", time: 500 },\n            { type: \"textMessage\", text: \"You're too weak to go out there!\" },\n            { who: \"npc4\", type: \"walk\", direction: \"right\" },\n            { who: \"hero\", type: \"walk\", direction: \"down\" },\n          ],\n        },\n      ],\n      [asGridCoord(12, 1)]: [\n        {\n          events: [\n            { who: \"npc4\", type: \"walk\", direction: \"left\" },\n            { who: \"npc4\", type: \"walk\", direction: \"left\" },\n            { who: \"npc4\", type: \"stand\", direction: \"up\", time: 500 },\n            { type: \"textMessage\", text: \"You're too weak to go out there!\" },\n            { who: \"npc4\", type: \"walk\", direction: \"right\" },\n            { who: \"npc4\", type: \"walk\", direction: \"right\" },\n            { who: \"hero\", type: \"walk\", direction: \"down\" },\n          ],\n        },\n      ],\n    },\n  },\n  House1: {\n    lowerSrc: \"/images/maps/House1.png\",\n    // upperSrc: \"/images/maps/House.png\",\n    gameObjects: {\n      hero: new Person({\n        isPlayerControlled: true,\n        x: withGrid(4),\n        y: withGrid(5),\n      }),\n      npc1: new Person({\n        x: withGrid(2),\n        y: withGrid(2),\n        src: \"/images/characters/people/pikachu.png\",\n        talking: [\n          {\n            events: [\n              {\n                type: \"textMessage\",\n                text: \"I smell like beef!\",\n                faceHero: \"npc1\",\n              },\n            ],\n          },\n        ],\n      }),\n    },\n    walls: {\n      // Western wall\n      [asGridCoord(0, 1)]: true,\n      [asGridCoord(0, 2)]: true,\n      [asGridCoord(0, 3)]: true,\n      [asGridCoord(0, 4)]: true,\n      [asGridCoord(0, 5)]: true,\n      [asGridCoord(0, 6)]: true,\n      [asGridCoord(0, 7)]: true,\n      // Southern wall\n      [asGridCoord(1, 8)]: true,\n      [asGridCoord(2, 8)]: true,\n      [asGridCoord(3, 8)]: true,\n      [asGridCoord(4, 8)]: true,\n      [asGridCoord(5, 8)]: true,\n      [asGridCoord(6, 8)]: true,\n      [asGridCoord(7, 8)]: true,\n      [asGridCoord(8, 8)]: true,\n      [asGridCoord(9, 8)]: true,\n      [asGridCoord(10, 8)]: true,\n      [asGridCoord(11, 7)]: true,\n      // Eastern wall\n      [asGridCoord(11, 7)]: true,\n      [asGridCoord(11, 6)]: true,\n      [asGridCoord(12, 5)]: true,\n      [asGridCoord(12, 4)]: true,\n      [asGridCoord(12, 3)]: true,\n      [asGridCoord(11, 2)]: true,\n\n      // Northern wall\n      [asGridCoord(1, 1)]: true,\n      [asGridCoord(2, 1)]: true,\n      [asGridCoord(3, 1)]: true,\n      [asGridCoord(4, 1)]: true,\n      [asGridCoord(4, 2)]: true,\n      [asGridCoord(4, 3)]: true,\n      [asGridCoord(5, 1)]: true,\n      [asGridCoord(6, 1)]: true,\n      [asGridCoord(7, 1)]: true,\n      [asGridCoord(8, 1)]: true,\n      [asGridCoord(9, 1)]: true,\n      [asGridCoord(10, 1)]: true,\n      [asGridCoord(11, 1)]: true,\n\n      // Table\n      [asGridCoord(7, 4)]: true,\n      [asGridCoord(7, 5)]: true,\n      [asGridCoord(8, 4)]: true,\n      [asGridCoord(8, 5)]: true,\n    },\n    cutsceneSpaces: {\n      [asGridCoord(4, 7)]: [\n        {\n          events: [{ type: \"changeMap\", map: \"Town\" }],\n        },\n      ],\n    },\n  },\n};\n","import DirectionInput from './DirectionInput';\nimport OverworldMap from './OverworldMap';\nimport KeyPressListener from './KeyPressListener';\n\nexport default class Overworld {\n    constructor(config) {\n        this.element = config.element;\n        this.canvas = this.element.querySelector('.game-canvas');\n        this.ctx = this.canvas.getContext('2d');\n        this.map = null;\n    }\n\n    startGameLoop() {\n        const step = () => {\n            //Clear off the canvas\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n            //Establish the camera person\n            const cameraPerson = this.map.gameObjects.hero;\n\n            //Update all objects\n            Object.values(this.map.gameObjects).forEach(object => {\n                object.update({\n                    arrow: this.directionInput.direction,\n                    map: this.map,\n                })\n            })\n\n            //Draw Lower layer\n            this.map.drawLowerImage(this.ctx, cameraPerson);\n\n            //Draw Game Objects\n            Object.values(this.map.gameObjects).sort((a, b) => {\n                return a.y - b.y;\n            }).forEach(object => {\n                object.sprite.draw(this.ctx, cameraPerson);\n            })\n\n            //Draw Upper layer\n            this.map.drawUpperImage(this.ctx, cameraPerson);\n\n            requestAnimationFrame(() => {\n                step();\n            })\n        }\n        step();\n    }\n\n    bindActionInput() {\n        new KeyPressListener('Enter', () => {\n            //Is there a person here to talk to?\n            this.map.checkForActionCutscene()\n        })\n    }\n\n    bindHeroPositionCheck() {\n        document.addEventListener('PersonWalkingComplete', e => {\n            if (e.detail.whoId === 'hero') {\n                //Hero's position has changed\n                this.map.checkForFootstepCutscene()\n            }\n        })\n    }\n\n    startMap(mapConfig) {\n        this.map = new OverworldMap(mapConfig);\n        this.map.overworld = this;\n        this.map.mountObjects();\n    }\n\n    init() {\n        this.startMap(window.OverworldMaps.Town);\n\n        this.bindActionInput();\n        this.bindHeroPositionCheck();\n\n        this.directionInput = new DirectionInput();\n        this.directionInput.init();\n\n        this.startGameLoop();\n\n    }\n}","import Overworld from \"./Overworld\";\n\nconst buildOverWorld = () => {\n    const overworld = new Overworld({\n        element: document.querySelector(\".game-container\")\n    });\n\n    overworld.init()\n}\n\nexport default buildOverWorld;","import { useEffect } from 'react';\nimport buildOverWorld from '../components/BuildWorld'\n\nfunction OverWorld() {\n\n    useEffect(() => {\n        buildOverWorld();\n    }, [])\n\n    return (\n        <div class=\"game-container\" >\n            <canvas class=\"game-canvas\" width=\"352\" height=\"198\"></canvas>\n        </div>\n    )\n}\n\nexport default OverWorld;","\nimport './App.css';\nimport './TextMessage.css';\nimport GameContainer from './components/GameContainer';\n\n\n\nfunction App() {\n\n  return (\n    <GameContainer />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}